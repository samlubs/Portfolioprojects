SELECT*
FROM Portfolioproject..[covid deaths]
WHERE  continent is not NULL
ORDER by 3,4

SELECT*
FROM Portfolioproject..[covid vaccinations]
WHERE  continent is not NULL
ORDER by 3,4


---looking at totalcases VS total_deaths
--- shows the likelyhood of dying of COVID when you get affected

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as Deathpercentage
FROM Portfolioproject..[covid deaths]
WHERE continent like'%Africa%'AND continent is not null
ORDER by 1,2;

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as Deathpercentage
FROM Portfolioproject..[covid deaths]
WHERE [location] like'%states%'AND continent is not null
ORDER by 1,2;

---looking at total_cases VS population
---shows what percentage of the population got COVID

SELECT location, date, population, total_cases, (total_cases/population)*100 as Percentageinfectedpopulation
From Portfolioproject..[covid deaths]
WHERE location like'%states%' AND continent is not null
ORDER BY 1,2;

---Looking at countries with the highest infection rate compared to population

SELECT location, population, MAX(total_cases) as highestinfectioncount, MAX((total_cases/population))*100 as percentpopulationinfected
FROM Portfolioproject..[covid deaths]
WHERE continent is not null
GROUP BY location,population
ORDER BY percentpopulationinfected desc;

---showing countries with highest death count per location

---the query includes NULL values in the totaldeath count column

SELECT location, population, MAX(total_deaths) as Totaldeathcount
FROM Portfolioproject..[covid deaths]
WHERE continent is not NULL
GROUP BY location, population
ORDER BY Totaldeathcount desc;

---The query below shows the maximum value of total deaths exculuding the NULL rows.

SELECT location, population, MAX(total_deaths) as Totaldeathcount
FROM Portfolioproject..[covid deaths]
WHERE continent is not NULL
GROUP BY location, population
HAVING MAX(total_deaths) IS NOT NULL
ORDER BY Totaldeathcount desc;

---CONTINENT ANALYSIS

---Showing continents with the highest death count per population.
---"CAST" function is being used to convert "total_deaths" column to an "INT" type before the "MAX function is applied to it"

SELECT continent,MAX(cast(total_deaths as int)) as Totaldeathcount
FROM Portfolioproject..[covid deaths]
WHERE continent is not null
GROUP BY continent
ORDER BY TotalDeathCount desc;

---Showing continents with the highest infection rate compared to the population

SELECT continent,MAX(cast(total_cases as int)) as highestinfectioncount, MAX((total_cases/population))*100 as percentagepopulationinfected
FROM Portfolioproject..[covid deaths]
WHERE continent is not null
GROUP BY continent
ORDER BY percentagepopulationinfected desc;

---GLOBAL NUMBERS
--Death percentage comapared to population
SELECT date,SUM(new_cases) as total_cases, SUM(new_deaths) as total_deaths, SUM(new_deaths)/SUM(new_cases)*100 as Deathpercentage
FROM Portfolioproject..[covid deaths]
WHERE continent is not NULL
GROUP BY [date]
ORDER BY 1,2;

---totalpopulation VS Vaccinations
SELECT dea.continent,dea.location,dea.population,vac.new_vaccinations,
       SUM(vac.new_vaccinations) OVER(PARTITION BY dea.location ORDER BY CAST(dea.location AS NVARCHAR(400)),dea.date) AS rollingpeoplevaccinated
FROM Portfolioproject..[covid deaths] dea
JOIN Portfolioproject..[covid vaccinations] vac
ON dea.location=vac.location AND dea.date=vac.date
WHERE dea.continent is not NULL
ORDER BY 2,3;

--- we are going to create a temp table with rollingpeoplevaccinated.
---USE CTE

WITH popVSVac(continent,location,date,population,New_vaccinations,rollingpeoplevaccinated)
AS
(
    SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
           SUM(vac.new_vaccinations) OVER (PARTITION BY dea.Location ORDER BY CAST(dea.location AS NVARCHAR(400)), dea.date) AS rollingpeoplevaccinated
    FROM Portfolioproject..[covid deaths] dea
    JOIN Portfolioproject..[covid vaccinations] vac
    ON dea.location = vac.location AND dea.date = vac.date
    WHERE dea.continent is not NULL
)
SELECT *, (rollingpeoplevaccinated/population)*100
FROM popVSVac
)

---TEMP TABLE
DROP TABLE if exists percentagepopulationvaccinated
CREATE TABLE percentpopulationvaccinated
(
    continent NVARCHAR(255),
  location NVARCHAR(255),
  date DATE,
  population NVARCHAR(255),
  new_vaccinations FLOAT,
  rollingpeoplevaccinated FLOAT
);

INSERT INTO percentpopulationvaccinated (continent, location, date, population, new_vaccinations, rollingpeoplevaccinated)
SELECT continent, location, date, population, new_vaccinations,
       SUM(ISNULL(new_vaccinations, 0)) OVER (PARTITION BY location ORDER BY CAST(location AS NVARCHAR(400)), date) as rollingpeoplevaccinated
FROM (
    SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
    FROM Portfolioproject..[covid deaths] dea
    JOIN Portfolioproject..[covid vaccinations] vac
    ON dea.location = vac.location AND dea.date = vac.date
    WHERE dea.continent is not NULL
) t
ORDER BY location, date;

---creating views to store data for later visualisations

DROP VIEW percentagedeath;

CREATE VIEW percentagedeath AS
SELECT date, SUM(new_cases)as total_cases, SUM(new_deaths)as total_deaths, SUM(new_deaths)/sum(new_cases)*100 as Deathpercentage
From Portfolioproject..[covid deaths]
Where continent is not null
Group by date;


CREATE VIEW percentagepopulationinfected AS
SELECT location, population, MAX(total_cases) as highestinfectioncount, MAX((total_cases/population))*100 as percentpopulationinfected
FROM Portfolioproject..[covid deaths]
WHERE continent is not null
GROUP BY location, population;

CREATE VIEW rollingpeoplevaccinated AS
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
       SUM(vac.new_vaccinations) OVER (PARTITION BY dea.Location ORDER BY CAST(dea.location AS NVARCHAR(400)), dea.date) AS rollingpeoplevaccinated
FROM Portfolioproject..[covid deaths] dea
JOIN Portfolioproject..[covid vaccinations] vac
ON dea.location = vac.location AND dea.date = vac.date
WHERE dea.continent is not NULL;
